    public interface #genericTypeDeclaration("SwitchBuilder" $gt) {
        #typeInstance($union.typeName) getValue();
        #foreach( $product in $union.productTypes )
        Function<#typeInstance($product.typeName),$gt> #bGetterName($product)();
        #end

        default #genericTypeInstance("Switch" $gt) build() {
            #foreach( $product in $union.productTypes )
            Function<#typeInstance($product.typeName),$gt> #bSetterName($product) = #bGetterName($product)();
            #end

            return new #genericTypeInstance("Switch" $gt)() {
                #foreach( $product in $union.productTypes )
                public $gt is(#typeInstance($product.typeName) it) {
                    return #bSetterName($product).apply(it);
                }

                #end
            };
        }

        default $gt apply() {
            return getValue().when(build());
        }
    }